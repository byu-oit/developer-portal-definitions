{
  "basePath": "/domains/common/templates/v1",
  "x-mock_json": {
    "set_add": {
      "gro_group": "AD-Test",
      "description": "A set to test templates.",
      "name": "Template Test Set"
    },
    "set_modify": {
      "description": "Another test set",
      "name": "Test Set"
    },
    "template_apply": {
      "parameters": [
        {
          "value": "Fred",
          "key": "name"
        }
      ]
    },
    "logs": {
      "logs": [
        "This is log message 2",
        "This is log message 1"
      ],
      "metadata": {
        "validation_response": {
          "message": "Successful",
          "code": 200
        }
      }
    },
    "template_instance": {
      "response": "Hello, Fred.",
      "metadata": {
        "validation_response": {
          "message": "Successful",
          "code": 200
        }
      }
    },
    "template_modify": {
      "template": "Hello, :name.",
      "description": "Another test template",
      "name": "Test Template"
    },
    "template_info": {
      "description": {
        "display_label": "Description",
        "value": "This is a test template set.",
        "api_type": "modifiable"
      },
      "name": {
        "display_label": "Name",
        "value": "Test Template Set",
        "api_type": "modifiable"
      },
      "parameters": [
        "name"
      ],
      "uuid": {
        "display_label": "Set UUID",
        "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
        "api_type": "system",
        "key": true
      },
      "metadata": {
        "validation_response": {
          "message": "Successful",
          "code": 200
        }
      }
    },
    "elements": {
      "values": [
        {
          "id_type": {
            "display_label": "Type",
            "value": "Set",
            "api_type": "modifiable"
          },
          "description": {
            "display_label": "Description",
            "value": "This is a test template set.",
            "api_type": "modifiable"
          },
          "date_time_updated": {
            "display_label": "Updated",
            "value": "2014-05-11T13:45:53.200Z",
            "api_type": "system"
          },
          "name": {
            "display_label": "Name",
            "value": "Test Template Set",
            "api_type": "modifiable"
          },
          "id_created_by": {
            "display_label": "Created by",
            "description": "Bugs Bunny Ithaca",
            "value": "764634873",
            "api_type": "system"
          },
          "date_time_created": {
            "display_label": "Created",
            "value": "2014-05-11T13:45:53.200Z",
            "api_type": "system"
          },
          "uuid": {
            "display_label": "Set UUID",
            "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
            "api_type": "system",
            "key": true
          },
          "id_updated_by": {
            "display_label": "Updated by",
            "description": "Bugs Bunny Ithaca",
            "value": "764634873",
            "api_type": "system"
          }
        }
      ],
      "metadata": {
        "validation_response": {
          "message": "Successful",
          "code": 200
        },
        "page_start": 1,
        "page_size": 1,
        "page_end": 1,
        "max_page_size": 50,
        "collection_size": 1,
        "default_page_size": 50
      }
    },
    "template_add": {
      "template": "Hello, :name",
      "set_id": "cea9a774-dfe8-4dfd-8a2a-bb2edc98440",
      "description": "Another test template.",
      "name": "Test Template 2"
    }
  },
  "x-lambda-functions": {
    "logs": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/logsLambda",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    },
    "root": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/root",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    },
    "set": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/set",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    },
    "template-id-apply": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/templateIdApply",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    },
    "template-id": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/templateId",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    },
    "set-id": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/setId",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    },
    "logs-id": {
      "runtime": "nodejs8.10",
      "path_to_code": "./lambdas/logsId",
      "timeout": "30",
      "memory": "128",
      "handler": "index.handler"
    }
  },
  "paths": {
    "/logs?": {
      "x-controller": "Admin",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Admin"
        ],
        "summary": "Retrieve logs",
        "x-lambda-function": "logs",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieves a list of log entries from the template service.",
        "parameters": [
          {
            "description": "Return this many items of a large collection",
            "name": "page_size",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "description": "Skip into a large collection to this item",
            "name": "page_start",
            "type": "string",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of log entries from the template service",
              "properties": {
                "logs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "A list of log entries from the template service beginning with the most recent.",
            "examples": {
              "application/json": {
                "logs": [
                  "This is log message 2",
                  "This is log message 1"
                ],
                "metadata": {
                  "validation_response": {
                    "message": "Successful",
                    "code": 200
                  }
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "getLogs"
      }
    },
    "/?": {
      "post": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Create a template",
        "x-lambda-function": "root",
        "x-throttling-tier": "Unlimited",
        "description": "Creates a template",
        "parameters": [
          {
            "schema": {
              "description": "Structure to add a template to a template set",
              "properties": {
                "template": {
                  "type": "string"
                },
                "set_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "set_id",
                "template"
              ],
              "type": "object"
            },
            "description": "New template",
            "name": "template_add",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "description": "A set or a template",
              "properties": {
                "id_type": {
                  "description": "Entity Type",
                  "properties": {
                    "display_label": {
                      "default": "Type",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_updated": {
                  "description": "When was the question last updated?",
                  "properties": {
                    "display_label": {
                      "default": "Updated",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "id_created_by": {
                  "description": "ID of the person who created the object",
                  "properties": {
                    "display_label": {
                      "default": "Created by",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_created": {
                  "description": "When was the question created?",
                  "properties": {
                    "display_label": {
                      "default": "Created",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                },
                "id_updated_by": {
                  "description": "ID of the person who made the last update",
                  "properties": {
                    "display_label": {
                      "default": "Log ID",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "Template successfully created",
            "examples": {
              "application/json": {
                "id_type": {
                  "display_label": "Type",
                  "value": "Set",
                  "api_type": "modifiable"
                },
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "date_time_updated": {
                  "display_label": "Updated",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "id_created_by": {
                  "display_label": "Created by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                },
                "date_time_created": {
                  "display_label": "Created",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "id_updated_by": {
                  "display_label": "Updated by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "addTemplate"
      },
      "x-controller": "templates",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve Templates",
        "x-lambda-function": "root",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieves a list of template sets or the templates in a set.",
        "parameters": [
          {
            "description": "Return this many items of a large collection",
            "name": "page_size",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "description": "Skip into a large collection to this item",
            "name": "page_start",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "description": "Request a template set",
            "name": "set_id",
            "type": "string",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Element lists",
              "properties": {
                "values": {
                  "items": {
                    "description": "A set or a template",
                    "properties": {
                      "id_type": {
                        "description": "Entity Type",
                        "properties": {
                          "display_label": {
                            "default": "Type",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "modifiable",
                            "enum": [
                              "modifiable"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "description": {
                        "description": "Entity Description",
                        "properties": {
                          "display_label": {
                            "default": "Description",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "modifiable",
                            "enum": [
                              "modifiable"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "date_time_updated": {
                        "description": "When was the question last updated?",
                        "properties": {
                          "display_label": {
                            "default": "Updated",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "description": "Entity Name",
                        "properties": {
                          "display_label": {
                            "default": "Name",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "modifiable",
                            "enum": [
                              "modifiable"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "id_created_by": {
                        "description": "ID of the person who created the object",
                        "properties": {
                          "display_label": {
                            "default": "Created by",
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "date_time_created": {
                        "description": "When was the question created?",
                        "properties": {
                          "display_label": {
                            "default": "Created",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "uuid": {
                        "description": "A Question UUID",
                        "properties": {
                          "display_label": {
                            "default": "Question UUID",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          },
                          "key": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "metadata": {
                        "properties": {
                          "validation_response": {
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "code": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "code",
                              "message"
                            ],
                            "type": "object"
                          },
                          "validation_information": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "cache": {
                            "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                            "properties": {
                              "date_time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "validation_response"
                        ],
                        "type": "object"
                      },
                      "id_updated_by": {
                        "description": "ID of the person who made the last update",
                        "properties": {
                          "display_label": {
                            "default": "Log ID",
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metadata": {
                  "allOf": [
                    {
                      "properties": {
                        "page_start": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "page_size": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "page_end": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "max_page_size": {
                          "type": "integer"
                        },
                        "collection_size": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "default_page_size": {
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "validation_response": {
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "code": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ],
                          "type": "object"
                        },
                        "validation_information": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cache": {
                          "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                          "properties": {
                            "date_time": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "validation_response"
                      ],
                      "type": "object"
                    }
                  ]
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "A list of template sets or the templates in a set.",
            "examples": {
              "application/json": {
                "values": [
                  {
                    "id_type": {
                      "display_label": "Type",
                      "value": "Set",
                      "api_type": "modifiable"
                    },
                    "description": {
                      "display_label": "Description",
                      "value": "This is a test template set.",
                      "api_type": "modifiable"
                    },
                    "date_time_updated": {
                      "display_label": "Updated",
                      "value": "2014-05-11T13:45:53.200Z",
                      "api_type": "system"
                    },
                    "name": {
                      "display_label": "Name",
                      "value": "Test Template Set",
                      "api_type": "modifiable"
                    },
                    "id_created_by": {
                      "display_label": "Created by",
                      "description": "Bugs Bunny Ithaca",
                      "value": "764634873",
                      "api_type": "system"
                    },
                    "date_time_created": {
                      "display_label": "Created",
                      "value": "2014-05-11T13:45:53.200Z",
                      "api_type": "system"
                    },
                    "uuid": {
                      "display_label": "Set UUID",
                      "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                      "api_type": "system",
                      "key": true
                    },
                    "id_updated_by": {
                      "display_label": "Updated by",
                      "description": "Bugs Bunny Ithaca",
                      "value": "764634873",
                      "api_type": "system"
                    }
                  }
                ],
                "metadata": {
                  "validation_response": {
                    "message": "Successful",
                    "code": 200
                  },
                  "page_start": 1,
                  "page_size": 1,
                  "page_end": 1,
                  "max_page_size": 50,
                  "collection_size": 1,
                  "default_page_size": 50
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "getTemplateSets"
      }
    },
    "/set/{set_id}": {
      "put": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Admin"
        ],
        "summary": "Modify a set",
        "x-lambda-function": "set-id",
        "x-throttling-tier": "Unlimited",
        "description": "Modifies a set",
        "parameters": [
          {
            "description": "Request a template set",
            "name": "set_id",
            "type": "string",
            "required": true,
            "in": "path"
          },
          {
            "schema": {
              "description": "Structure to modify a set",
              "properties": {
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "description": "Modified set",
            "name": "set_modify",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A set or a template",
              "properties": {
                "id_type": {
                  "description": "Entity Type",
                  "properties": {
                    "display_label": {
                      "default": "Type",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_updated": {
                  "description": "When was the question last updated?",
                  "properties": {
                    "display_label": {
                      "default": "Updated",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "id_created_by": {
                  "description": "ID of the person who created the object",
                  "properties": {
                    "display_label": {
                      "default": "Created by",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_created": {
                  "description": "When was the question created?",
                  "properties": {
                    "display_label": {
                      "default": "Created",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                },
                "id_updated_by": {
                  "description": "ID of the person who made the last update",
                  "properties": {
                    "display_label": {
                      "default": "Log ID",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "Set successfully modified",
            "examples": {
              "application/json": {
                "id_type": {
                  "display_label": "Type",
                  "value": "Set",
                  "api_type": "modifiable"
                },
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "date_time_updated": {
                  "display_label": "Updated",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "id_created_by": {
                  "display_label": "Created by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                },
                "date_time_created": {
                  "display_label": "Created",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "id_updated_by": {
                  "display_label": "Updated by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "modifySet"
      },
      "x-controller": "Admin",
      "delete": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Admin"
        ],
        "summary": "Remove a template set",
        "x-lambda-function": "set-id",
        "x-throttling-tier": "Unlimited",
        "description": "Removes a template set",
        "parameters": [
          {
            "description": "Request a template set",
            "name": "set_id",
            "type": "string",
            "required": true,
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Template set successfully removed"
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          }
        },
        "operationId": "removeSet"
      }
    },
    "/set": {
      "post": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Admin"
        ],
        "summary": "Create a template set",
        "x-lambda-function": "set",
        "x-throttling-tier": "Unlimited",
        "description": "Creates a template set",
        "parameters": [
          {
            "schema": {
              "description": "Structure to add a template set",
              "properties": {
                "gro_group": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "gro_group"
              ],
              "type": "object"
            },
            "description": "New set",
            "name": "set_add",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "description": "A set or a template",
              "properties": {
                "id_type": {
                  "description": "Entity Type",
                  "properties": {
                    "display_label": {
                      "default": "Type",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_updated": {
                  "description": "When was the question last updated?",
                  "properties": {
                    "display_label": {
                      "default": "Updated",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "id_created_by": {
                  "description": "ID of the person who created the object",
                  "properties": {
                    "display_label": {
                      "default": "Created by",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_created": {
                  "description": "When was the question created?",
                  "properties": {
                    "display_label": {
                      "default": "Created",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                },
                "id_updated_by": {
                  "description": "ID of the person who made the last update",
                  "properties": {
                    "display_label": {
                      "default": "Log ID",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "Template set successfully created",
            "examples": {
              "application/json": {
                "id_type": {
                  "display_label": "Type",
                  "value": "Set",
                  "api_type": "modifiable"
                },
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "date_time_updated": {
                  "display_label": "Updated",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "id_created_by": {
                  "display_label": "Created by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                },
                "date_time_created": {
                  "display_label": "Created",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "id_updated_by": {
                  "display_label": "Updated by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "addSet"
      },
      "x-controller": "Admin"
    },
    "/logs": {
      "x-controller": "Admin",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Admin"
        ],
        "summary": "Retrieve logs",
        "x-lambda-function": "logs",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieves a list of log entries from the template service.",
        "parameters": [
          {
            "description": "Return this many items of a large collection",
            "name": "page_size",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "description": "Skip into a large collection to this item",
            "name": "page_start",
            "type": "string",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of log entries from the template service",
              "properties": {
                "logs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "A list of log entries from the template service beginning with the most recent.",
            "examples": {
              "application/json": {
                "logs": [
                  "This is log message 2",
                  "This is log message 1"
                ],
                "metadata": {
                  "validation_response": {
                    "message": "Successful",
                    "code": 200
                  }
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "getLogs"
      }
    },
    "/{template_id}/apply": {
      "put": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Apply a template",
        "x-lambda-function": "template-id-apply",
        "x-throttling-tier": "Unlimited",
        "description": "Instantiate a template",
        "parameters": [
          {
            "description": "Template UUID",
            "name": "template_id",
            "type": "string",
            "required": true,
            "in": "path"
          },
          {
            "schema": {
              "description": "Object containing replaceable parameters to apply to a template",
              "properties": {
                "parameters": {
                  "items": {
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "description": "Instantiate a template",
            "name": "template_apply",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A set or a template",
              "properties": {
                "id_type": {
                  "description": "Entity Type",
                  "properties": {
                    "display_label": {
                      "default": "Type",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_updated": {
                  "description": "When was the question last updated?",
                  "properties": {
                    "display_label": {
                      "default": "Updated",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "id_created_by": {
                  "description": "ID of the person who created the object",
                  "properties": {
                    "display_label": {
                      "default": "Created by",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_created": {
                  "description": "When was the question created?",
                  "properties": {
                    "display_label": {
                      "default": "Created",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                },
                "id_updated_by": {
                  "description": "ID of the person who made the last update",
                  "properties": {
                    "display_label": {
                      "default": "Log ID",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "Template successfully modified",
            "examples": {
              "application/json": {
                "id_type": {
                  "display_label": "Type",
                  "value": "Set",
                  "api_type": "modifiable"
                },
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "date_time_updated": {
                  "display_label": "Updated",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "id_created_by": {
                  "display_label": "Created by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                },
                "date_time_created": {
                  "display_label": "Created",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "id_updated_by": {
                  "display_label": "Updated by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "applyTemplate"
      },
      "x-controller": "templates"
    },
    "/logs/{set_id}": {
      "x-controller": "Admin",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Admin"
        ],
        "summary": "Retrieve set log",
        "x-lambda-function": "logs-id",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieves the log entries for the given set.",
        "parameters": [
          {
            "description": "Request a template set",
            "name": "set_id",
            "type": "string",
            "required": true,
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A list of log entries from the template service",
              "properties": {
                "logs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "A list of log entries from the template service beginning with the most recent.",
            "examples": {
              "application/json": {
                "logs": [
                  "This is log message 2",
                  "This is log message 1"
                ],
                "metadata": {
                  "validation_response": {
                    "message": "Successful",
                    "code": 200
                  }
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "getLog"
      }
    },
    "/*": {
      "post": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Create a template",
        "x-lambda-function": "root",
        "x-throttling-tier": "Unlimited",
        "description": "Creates a template",
        "parameters": [
          {
            "schema": {
              "description": "Structure to add a template to a template set",
              "properties": {
                "template": {
                  "type": "string"
                },
                "set_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "set_id",
                "template"
              ],
              "type": "object"
            },
            "description": "New template",
            "name": "template_add",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "description": "A set or a template",
              "properties": {
                "id_type": {
                  "description": "Entity Type",
                  "properties": {
                    "display_label": {
                      "default": "Type",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_updated": {
                  "description": "When was the question last updated?",
                  "properties": {
                    "display_label": {
                      "default": "Updated",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "id_created_by": {
                  "description": "ID of the person who created the object",
                  "properties": {
                    "display_label": {
                      "default": "Created by",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_created": {
                  "description": "When was the question created?",
                  "properties": {
                    "display_label": {
                      "default": "Created",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                },
                "id_updated_by": {
                  "description": "ID of the person who made the last update",
                  "properties": {
                    "display_label": {
                      "default": "Log ID",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "Template successfully created",
            "examples": {
              "application/json": {
                "id_type": {
                  "display_label": "Type",
                  "value": "Set",
                  "api_type": "modifiable"
                },
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "date_time_updated": {
                  "display_label": "Updated",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "id_created_by": {
                  "display_label": "Created by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                },
                "date_time_created": {
                  "display_label": "Created",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "id_updated_by": {
                  "display_label": "Updated by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "addTemplate"
      },
      "x-controller": "templates",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve Templates",
        "x-lambda-function": "root",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieves a list of template sets or the templates in a set.",
        "parameters": [
          {
            "description": "Return this many items of a large collection",
            "name": "page_size",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "description": "Skip into a large collection to this item",
            "name": "page_start",
            "type": "string",
            "required": false,
            "in": "query"
          },
          {
            "description": "Request a template set",
            "name": "set_id",
            "type": "string",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Element lists",
              "properties": {
                "values": {
                  "items": {
                    "description": "A set or a template",
                    "properties": {
                      "id_type": {
                        "description": "Entity Type",
                        "properties": {
                          "display_label": {
                            "default": "Type",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "modifiable",
                            "enum": [
                              "modifiable"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "description": {
                        "description": "Entity Description",
                        "properties": {
                          "display_label": {
                            "default": "Description",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "modifiable",
                            "enum": [
                              "modifiable"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "date_time_updated": {
                        "description": "When was the question last updated?",
                        "properties": {
                          "display_label": {
                            "default": "Updated",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "description": "Entity Name",
                        "properties": {
                          "display_label": {
                            "default": "Name",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "modifiable",
                            "enum": [
                              "modifiable"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "id_created_by": {
                        "description": "ID of the person who created the object",
                        "properties": {
                          "display_label": {
                            "default": "Created by",
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "date_time_created": {
                        "description": "When was the question created?",
                        "properties": {
                          "display_label": {
                            "default": "Created",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "uuid": {
                        "description": "A Question UUID",
                        "properties": {
                          "display_label": {
                            "default": "Question UUID",
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          },
                          "key": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "metadata": {
                        "properties": {
                          "validation_response": {
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "code": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "code",
                              "message"
                            ],
                            "type": "object"
                          },
                          "validation_information": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "cache": {
                            "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                            "properties": {
                              "date_time": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "validation_response"
                        ],
                        "type": "object"
                      },
                      "id_updated_by": {
                        "description": "ID of the person who made the last update",
                        "properties": {
                          "display_label": {
                            "default": "Log ID",
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "api_type": {
                            "default": "system",
                            "enum": [
                              "system"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metadata": {
                  "allOf": [
                    {
                      "properties": {
                        "page_start": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "page_size": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "page_end": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "max_page_size": {
                          "type": "integer"
                        },
                        "collection_size": {
                          "minimum": 0,
                          "type": "integer"
                        },
                        "default_page_size": {
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "validation_response": {
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "code": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ],
                          "type": "object"
                        },
                        "validation_information": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "cache": {
                          "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                          "properties": {
                            "date_time": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "validation_response"
                      ],
                      "type": "object"
                    }
                  ]
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "A list of template sets or the templates in a set.",
            "examples": {
              "application/json": {
                "values": [
                  {
                    "id_type": {
                      "display_label": "Type",
                      "value": "Set",
                      "api_type": "modifiable"
                    },
                    "description": {
                      "display_label": "Description",
                      "value": "This is a test template set.",
                      "api_type": "modifiable"
                    },
                    "date_time_updated": {
                      "display_label": "Updated",
                      "value": "2014-05-11T13:45:53.200Z",
                      "api_type": "system"
                    },
                    "name": {
                      "display_label": "Name",
                      "value": "Test Template Set",
                      "api_type": "modifiable"
                    },
                    "id_created_by": {
                      "display_label": "Created by",
                      "description": "Bugs Bunny Ithaca",
                      "value": "764634873",
                      "api_type": "system"
                    },
                    "date_time_created": {
                      "display_label": "Created",
                      "value": "2014-05-11T13:45:53.200Z",
                      "api_type": "system"
                    },
                    "uuid": {
                      "display_label": "Set UUID",
                      "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                      "api_type": "system",
                      "key": true
                    },
                    "id_updated_by": {
                      "display_label": "Updated by",
                      "description": "Bugs Bunny Ithaca",
                      "value": "764634873",
                      "api_type": "system"
                    }
                  }
                ],
                "metadata": {
                  "validation_response": {
                    "message": "Successful",
                    "code": 200
                  },
                  "page_start": 1,
                  "page_size": 1,
                  "page_end": 1,
                  "max_page_size": 50,
                  "collection_size": 1,
                  "default_page_size": 50
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "getTemplateSets"
      }
    },
    "/{template_id}": {
      "put": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Modify a template",
        "x-lambda-function": "template-id",
        "x-throttling-tier": "Unlimited",
        "description": "Modifies a template",
        "parameters": [
          {
            "description": "Template UUID",
            "name": "template_id",
            "type": "string",
            "required": true,
            "in": "path"
          },
          {
            "schema": {
              "description": "Structure to modify a template",
              "properties": {
                "template": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "template"
              ],
              "type": "object"
            },
            "description": "Modified template",
            "name": "template_modify",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "A set or a template",
              "properties": {
                "id_type": {
                  "description": "Entity Type",
                  "properties": {
                    "display_label": {
                      "default": "Type",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_updated": {
                  "description": "When was the question last updated?",
                  "properties": {
                    "display_label": {
                      "default": "Updated",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "id_created_by": {
                  "description": "ID of the person who created the object",
                  "properties": {
                    "display_label": {
                      "default": "Created by",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "date_time_created": {
                  "description": "When was the question created?",
                  "properties": {
                    "display_label": {
                      "default": "Created",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                },
                "id_updated_by": {
                  "description": "ID of the person who made the last update",
                  "properties": {
                    "display_label": {
                      "default": "Log ID",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "Template successfully modified",
            "examples": {
              "application/json": {
                "id_type": {
                  "display_label": "Type",
                  "value": "Set",
                  "api_type": "modifiable"
                },
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "date_time_updated": {
                  "display_label": "Updated",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "id_created_by": {
                  "display_label": "Created by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                },
                "date_time_created": {
                  "display_label": "Created",
                  "value": "2014-05-11T13:45:53.200Z",
                  "api_type": "system"
                },
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "id_updated_by": {
                  "display_label": "Updated by",
                  "description": "Bugs Bunny Ithaca",
                  "value": "764634873",
                  "api_type": "system"
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "modifyTemplate"
      },
      "x-controller": "templates",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Get information about a template",
        "x-lambda-function": "template-id",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieve metadata and replaceable parameter information for a template",
        "parameters": [
          {
            "description": "Template UUID",
            "name": "template_id",
            "type": "string",
            "required": true,
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Template info",
              "properties": {
                "description": {
                  "description": "Entity Description",
                  "properties": {
                    "display_label": {
                      "default": "Description",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "Entity Name",
                  "properties": {
                    "display_label": {
                      "default": "Name",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "modifiable",
                      "enum": [
                        "modifiable"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "parameters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "uuid": {
                  "description": "A Question UUID",
                  "properties": {
                    "display_label": {
                      "default": "Question UUID",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "api_type": {
                      "default": "system",
                      "enum": [
                        "system"
                      ],
                      "type": "string"
                    },
                    "key": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "value"
                  ],
                  "type": "object"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "description": "An instantiated template or template usage information",
            "examples": {
              "application/json": {
                "description": {
                  "display_label": "Description",
                  "value": "This is a test template set.",
                  "api_type": "modifiable"
                },
                "name": {
                  "display_label": "Name",
                  "value": "Test Template Set",
                  "api_type": "modifiable"
                },
                "parameters": [
                  "name"
                ],
                "uuid": {
                  "display_label": "Set UUID",
                  "value": "cea9a774-dfe8-4dfd-8a2a-bb2edc984407",
                  "api_type": "system",
                  "key": true
                },
                "metadata": {
                  "validation_response": {
                    "message": "Successful",
                    "code": 200
                  }
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          }
        },
        "operationId": "getTemplate"
      },
      "delete": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Templates"
        ],
        "summary": "Remove a template",
        "x-lambda-function": "template-id",
        "x-throttling-tier": "Unlimited",
        "description": "Removes a template",
        "parameters": [
          {
            "description": "Template UUID",
            "name": "template_id",
            "type": "string",
            "required": true,
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Template successfully removed"
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          }
        },
        "operationId": "removeTemplate"
      }
    }
  },
  "host": "api.byu.edu:443",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "parameters": {
    "page_start": {
      "description": "Skip into a large collection to this item",
      "name": "page_start",
      "type": "string",
      "required": false,
      "in": "query"
    },
    "page_size": {
      "description": "Return this many items of a large collection",
      "name": "page_size",
      "type": "string",
      "required": false,
      "in": "query"
    },
    "set_id_query": {
      "description": "Request a template set",
      "name": "set_id",
      "type": "string",
      "required": false,
      "in": "query"
    },
    "template_id": {
      "description": "Template UUID",
      "name": "template_id",
      "type": "string",
      "required": true,
      "in": "path"
    },
    "set_id_path": {
      "description": "Request a template set",
      "name": "set_id",
      "type": "string",
      "required": true,
      "in": "path"
    }
  },
  "definitions": {
    "idUpdatedBy": {
      "description": "ID of the person who made the last update",
      "properties": {
        "display_label": {
          "default": "Log ID",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "system",
          "enum": [
            "system"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "element": {
      "description": "A set or a template",
      "properties": {
        "id_type": {
          "description": "Entity Type",
          "properties": {
            "display_label": {
              "default": "Type",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "modifiable",
              "enum": [
                "modifiable"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "description": {
          "description": "Entity Description",
          "properties": {
            "display_label": {
              "default": "Description",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "modifiable",
              "enum": [
                "modifiable"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "date_time_updated": {
          "description": "When was the question last updated?",
          "properties": {
            "display_label": {
              "default": "Updated",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "system",
              "enum": [
                "system"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "name": {
          "description": "Entity Name",
          "properties": {
            "display_label": {
              "default": "Name",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "modifiable",
              "enum": [
                "modifiable"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "id_created_by": {
          "description": "ID of the person who created the object",
          "properties": {
            "display_label": {
              "default": "Created by",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "system",
              "enum": [
                "system"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "date_time_created": {
          "description": "When was the question created?",
          "properties": {
            "display_label": {
              "default": "Created",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "system",
              "enum": [
                "system"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "uuid": {
          "description": "A Question UUID",
          "properties": {
            "display_label": {
              "default": "Question UUID",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "system",
              "enum": [
                "system"
              ],
              "type": "string"
            },
            "key": {
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        },
        "id_updated_by": {
          "description": "ID of the person who made the last update",
          "properties": {
            "display_label": {
              "default": "Log ID",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "system",
              "enum": [
                "system"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "templateInstance": {
      "description": "An instantiated template",
      "properties": {
        "response": {
          "type": "string"
        },
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "logs": {
      "description": "A list of log entries from the template service",
      "properties": {
        "logs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "templateModify": {
      "description": "Structure to modify a template",
      "properties": {
        "template": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "template"
      ],
      "type": "object"
    },
    "setAdd": {
      "description": "Structure to add a template set",
      "properties": {
        "gro_group": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "gro_group"
      ],
      "type": "object"
    },
    "templateInfo": {
      "description": "Template info",
      "properties": {
        "description": {
          "description": "Entity Description",
          "properties": {
            "display_label": {
              "default": "Description",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "modifiable",
              "enum": [
                "modifiable"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "name": {
          "description": "Entity Name",
          "properties": {
            "display_label": {
              "default": "Name",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "modifiable",
              "enum": [
                "modifiable"
              ],
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "parameters": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "uuid": {
          "description": "A Question UUID",
          "properties": {
            "display_label": {
              "default": "Question UUID",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "api_type": {
              "default": "system",
              "enum": [
                "system"
              ],
              "type": "string"
            },
            "key": {
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      },
      "type": "object"
    },
    "metadataSimple": {
      "properties": {
        "validation_response": {
          "properties": {
            "message": {
              "type": "string"
            },
            "code": {
              "type": "integer"
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        },
        "validation_information": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cache": {
          "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
          "properties": {
            "date_time": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "validation_response"
      ],
      "type": "object"
    },
    "errorResponse": {
      "properties": {
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      },
      "required": [
        "metadata"
      ],
      "type": "object"
    },
    "dateTimeCreated": {
      "description": "When was the question created?",
      "properties": {
        "display_label": {
          "default": "Created",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "system",
          "enum": [
            "system"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "templateAdd": {
      "description": "Structure to add a template to a template set",
      "properties": {
        "template": {
          "type": "string"
        },
        "set_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "set_id",
        "template"
      ],
      "type": "object"
    },
    "stdDescription": {
      "description": "Entity Description",
      "properties": {
        "display_label": {
          "default": "Description",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "modifiable",
          "enum": [
            "modifiable"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "templateApply": {
      "description": "Object containing replaceable parameters to apply to a template",
      "properties": {
        "parameters": {
          "items": {
            "properties": {
              "value": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            },
            "required": [
              "key",
              "value"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "setModify": {
      "description": "Structure to modify a set",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "dateTimeUpdated": {
      "description": "When was the question last updated?",
      "properties": {
        "display_label": {
          "default": "Updated",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "system",
          "enum": [
            "system"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "stdName": {
      "description": "Entity Name",
      "properties": {
        "display_label": {
          "default": "Name",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "modifiable",
          "enum": [
            "modifiable"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "uuid": {
      "description": "A Question UUID",
      "properties": {
        "display_label": {
          "default": "Question UUID",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "system",
          "enum": [
            "system"
          ],
          "type": "string"
        },
        "key": {
          "type": "boolean"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "stdType": {
      "description": "Entity Type",
      "properties": {
        "display_label": {
          "default": "Type",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "modifiable",
          "enum": [
            "modifiable"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "idCreatedBy": {
      "description": "ID of the person who created the object",
      "properties": {
        "display_label": {
          "default": "Created by",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "api_type": {
          "default": "system",
          "enum": [
            "system"
          ],
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "elements": {
      "description": "Element lists",
      "properties": {
        "values": {
          "items": {
            "description": "A set or a template",
            "properties": {
              "id_type": {
                "description": "Entity Type",
                "properties": {
                  "display_label": {
                    "default": "Type",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "modifiable",
                    "enum": [
                      "modifiable"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "description": {
                "description": "Entity Description",
                "properties": {
                  "display_label": {
                    "default": "Description",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "modifiable",
                    "enum": [
                      "modifiable"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "date_time_updated": {
                "description": "When was the question last updated?",
                "properties": {
                  "display_label": {
                    "default": "Updated",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "system",
                    "enum": [
                      "system"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "name": {
                "description": "Entity Name",
                "properties": {
                  "display_label": {
                    "default": "Name",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "modifiable",
                    "enum": [
                      "modifiable"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "id_created_by": {
                "description": "ID of the person who created the object",
                "properties": {
                  "display_label": {
                    "default": "Created by",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "system",
                    "enum": [
                      "system"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "date_time_created": {
                "description": "When was the question created?",
                "properties": {
                  "display_label": {
                    "default": "Created",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "system",
                    "enum": [
                      "system"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "uuid": {
                "description": "A Question UUID",
                "properties": {
                  "display_label": {
                    "default": "Question UUID",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "system",
                    "enum": [
                      "system"
                    ],
                    "type": "string"
                  },
                  "key": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              },
              "metadata": {
                "properties": {
                  "validation_response": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "code",
                      "message"
                    ],
                    "type": "object"
                  },
                  "validation_information": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "cache": {
                    "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                    "properties": {
                      "date_time": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "validation_response"
                ],
                "type": "object"
              },
              "id_updated_by": {
                "description": "ID of the person who made the last update",
                "properties": {
                  "display_label": {
                    "default": "Log ID",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "api_type": {
                    "default": "system",
                    "enum": [
                      "system"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "metadata": {
          "allOf": [
            {
              "properties": {
                "page_start": {
                  "minimum": 0,
                  "type": "integer"
                },
                "page_size": {
                  "minimum": 0,
                  "type": "integer"
                },
                "page_end": {
                  "minimum": 0,
                  "type": "integer"
                },
                "max_page_size": {
                  "type": "integer"
                },
                "collection_size": {
                  "minimum": 0,
                  "type": "integer"
                },
                "default_page_size": {
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            {
              "properties": {
                "validation_response": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ],
                  "type": "object"
                },
                "validation_information": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "cache": {
                  "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                  "properties": {
                    "date_time": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "validation_response"
              ],
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "metadata"
      ],
      "type": "object"
    },
    "metadataCollection": {
      "allOf": [
        {
          "properties": {
            "page_start": {
              "minimum": 0,
              "type": "integer"
            },
            "page_size": {
              "minimum": 0,
              "type": "integer"
            },
            "page_end": {
              "minimum": 0,
              "type": "integer"
            },
            "max_page_size": {
              "type": "integer"
            },
            "collection_size": {
              "minimum": 0,
              "type": "integer"
            },
            "default_page_size": {
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      ]
    }
  },
  "responses": {
    "400": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Invalid Request - unable to interpret request"
    },
    "401": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Authentication required to access data"
    },
    "403": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Access denied to protected data"
    },
    "404": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Object not found"
    },
    "409": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Query parameters conflict or are malformed"
    }
  },
  "info": {
    "title": "DomainCommonTemplateService",
    "description": "A service for instantiating templates with replaceable parameter and managing sets of templates.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v1"
  }
}