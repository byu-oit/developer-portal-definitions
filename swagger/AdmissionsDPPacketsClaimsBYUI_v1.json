{
  "basePath": "/domain/admissions/packets/byui/claims/v1",
  "x-mock_json": {
    "claims": {
      "claim_id2": {
        "claims": [
          {
            "relationship": "gt_or_eq",
            "concept": "age",
            "value": "21"
          }
        ],
        "subject": "987654321",
        "claim_id": "2",
        "mode": "ALL"
      },
      "claim_id1": {
        "claims": [
          {
            "relationship": "gt_or_eq",
            "concept": "age",
            "value": "21"
          }
        ],
        "subject": "123456789",
        "mode": "ALL"
      }
    },
    "claims_response": {
      "claim_id4": {
        "metadata": {
          "validation_response": {
            "message": "Not Found",
            "code": 404
          }
        }
      },
      "claim_id3": {
        "metadata": {
          "validation_response": {
            "message": "Bad Request",
            "code": 400
          }
        }
      },
      "claim_id2": {
        "verified": false,
        "metadata": {
          "validation_response": {
            "message": "Success",
            "code": 200
          }
        }
      },
      "claim_id1": {
        "verified": true,
        "metadata": {
          "validation_response": {
            "message": "Success",
            "code": 200
          }
        }
      }
    },
    "concepts": {
      "values": [
        {
          "id": "age",
          "range": "0-120",
          "description": "Age Claim",
          "longDescription": "An age claim can verify the age of a given packets applicant.",
          "type": "integer"
        }
      ],
      "metadata": {
        "validation_response": {
          "message": "Success",
          "code": 200
        }
      }
    }
  },
  "paths": {
    "/*": {
      "put": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Claims"
        ],
        "summary": "Submit Claim",
        "x-throttling-tier": "Unlimited",
        "description": "Submit a claim for validation",
        "parameters": [
          {
            "schema": {
              "additionalProperties": {
                "properties": {
                  "claims": {
                    "items": {
                      "description": "A claim for the engine to verify",
                      "example": {
                        "relationship": "gt_or_eq",
                        "concept": "age",
                        "value": "21",
                        "qualifier": {}
                      },
                      "properties": {
                        "relationship": {
                          "type": "string"
                        },
                        "concept": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "qualifier": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "mode": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "An associative array object whose properties are independent claims for the engine to verify",
              "example": {
                "claim_id2": {
                  "claims": [
                    {
                      "relationship": "gt_or_eq",
                      "concept": "age",
                      "value": "21"
                    }
                  ],
                  "subject": "987654321",
                  "claim_id": "2",
                  "mode": "ALL"
                },
                "claim_id1": {
                  "claims": [
                    {
                      "relationship": "gt_or_eq",
                      "concept": "age",
                      "value": "21"
                    }
                  ],
                  "subject": "123456789",
                  "mode": "ALL"
                }
              },
              "type": "object"
            },
            "description": "Claims object",
            "name": "claims",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "additionalProperties": {
                "properties": {
                  "verified": {
                    "type": "boolean"
                  },
                  "metadata": {
                    "properties": {
                      "validation_response": {
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ],
                        "type": "object"
                      },
                      "validation_information": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "cache": {
                        "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                        "properties": {
                          "date_time": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": [
                      "validation_response"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "description": "An associative array object of the responses to the claims in the claim object.",
              "example": {
                "claim_id4": {
                  "metadata": {
                    "validation_response": {
                      "message": "Not Found",
                      "code": 404
                    }
                  }
                },
                "claim_id3": {
                  "metadata": {
                    "validation_response": {
                      "message": "Bad Request",
                      "code": 400
                    }
                  }
                },
                "claim_id2": {
                  "verified": false,
                  "metadata": {
                    "validation_response": {
                      "message": "Success",
                      "code": 200
                    }
                  }
                },
                "claim_id1": {
                  "verified": true,
                  "metadata": {
                    "validation_response": {
                      "message": "Success",
                      "code": 200
                    }
                  }
                }
              },
              "type": "object"
            },
            "description": "Claims response",
            "examples": {
              "application/json": {
                "claim_id4": {
                  "metadata": {
                    "validation_response": {
                      "message": "Not Found",
                      "code": 404
                    }
                  }
                },
                "claim_id3": {
                  "metadata": {
                    "validation_response": {
                      "message": "Bad Request",
                      "code": 400
                    }
                  }
                },
                "claim_id2": {
                  "verified": false,
                  "metadata": {
                    "validation_response": {
                      "message": "Success",
                      "code": 200
                    }
                  }
                },
                "claim_id1": {
                  "verified": true,
                  "metadata": {
                    "validation_response": {
                      "message": "Success",
                      "code": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          },
          "500": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Internal Service Error"
          },
          "default": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Unexpected error"
          }
        },
        "operationId": "validateClaims"
      },
      "x-controller": "claims",
      "get": {
        "x-auth-type": "Application & Application User",
        "tags": [
          "Claims"
        ],
        "summary": "Retrieve Properties",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieves a collection of properties against which claims can be made.",
        "responses": {
          "200": {
            "schema": {
              "description": "A list of concepts",
              "properties": {
                "values": {
                  "items": {
                    "description": "A concept about which a claim may be made",
                    "example": {
                      "id": "age",
                      "range": "0-120",
                      "description": "Age Claim",
                      "longDescription": "An age claim can verify the age of a given packets applicant.",
                      "type": "integer"
                    },
                    "properties": {
                      "id": {
                        "type": "string",
                        "x-template": ":id"
                      },
                      "range": {
                        "type": "string",
                        "x-template": ":range"
                      },
                      "qualifiers": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-template": ":qualifiers"
                      },
                      "description": {
                        "type": "string",
                        "x-tmplate": ":description"
                      },
                      "longDescription": {
                        "type": "string",
                        "x-tmplate": ":longDescription"
                      },
                      "type": {
                        "type": "string",
                        "x-template": ":type"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "A collection of properties",
            "examples": {
              "application/json": {
                "values": [
                  {
                    "id": "age",
                    "range": "0-120",
                    "description": "Age Claim",
                    "longDescription": "An age claim can verify the age of a given packets applicant.",
                    "type": "integer"
                  }
                ],
                "metadata": {
                  "validation_response": {
                    "message": "Success",
                    "code": 200
                  }
                }
              }
            }
          },
          "400": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Invalid Request - unable to interpret request"
          },
          "401": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Authentication required to access data"
          },
          "403": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Access denied to protected data"
          },
          "404": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Object not found"
          },
          "409": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Query parameters conflict or are malformed"
          },
          "500": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Internal Service Error"
          },
          "default": {
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "validation_response": {
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "type": "object"
                    },
                    "validation_information": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cache": {
                      "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                      "properties": {
                        "date_time": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "validation_response"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "metadata"
              ],
              "type": "object"
            },
            "description": "Unexpected error"
          }
        },
        "operationId": "getConcepts"
      }
    }
  },
  "host": "api.byu.edu:443",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "definitions": {
    "concept": {
      "description": "A concept about which a claim may be made",
      "example": {
        "id": "age",
        "range": "0-120",
        "description": "Age Claim",
        "longDescription": "An age claim can verify the age of a given packets applicant.",
        "type": "integer"
      },
      "properties": {
        "id": {
          "type": "string",
          "x-template": ":id"
        },
        "range": {
          "type": "string",
          "x-template": ":range"
        },
        "qualifiers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-template": ":qualifiers"
        },
        "description": {
          "type": "string",
          "x-tmplate": ":description"
        },
        "longDescription": {
          "type": "string",
          "x-tmplate": ":longDescription"
        },
        "type": {
          "type": "string",
          "x-template": ":type"
        }
      },
      "type": "object"
    },
    "claims": {
      "additionalProperties": {
        "properties": {
          "claims": {
            "items": {
              "description": "A claim for the engine to verify",
              "example": {
                "relationship": "gt_or_eq",
                "concept": "age",
                "value": "21",
                "qualifier": {}
              },
              "properties": {
                "relationship": {
                  "type": "string"
                },
                "concept": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "qualifier": {
                  "type": "object"
                }
              },
              "required": [
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "subject": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "description": "An associative array object whose properties are independent claims for the engine to verify",
      "example": {
        "claim_id2": {
          "claims": [
            {
              "relationship": "gt_or_eq",
              "concept": "age",
              "value": "21"
            }
          ],
          "subject": "987654321",
          "claim_id": "2",
          "mode": "ALL"
        },
        "claim_id1": {
          "claims": [
            {
              "relationship": "gt_or_eq",
              "concept": "age",
              "value": "21"
            }
          ],
          "subject": "123456789",
          "mode": "ALL"
        }
      },
      "type": "object"
    },
    "claims_response": {
      "additionalProperties": {
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "type": "object"
      },
      "description": "An associative array object of the responses to the claims in the claim object.",
      "example": {
        "claim_id4": {
          "metadata": {
            "validation_response": {
              "message": "Not Found",
              "code": 404
            }
          }
        },
        "claim_id3": {
          "metadata": {
            "validation_response": {
              "message": "Bad Request",
              "code": 400
            }
          }
        },
        "claim_id2": {
          "verified": false,
          "metadata": {
            "validation_response": {
              "message": "Success",
              "code": 200
            }
          }
        },
        "claim_id1": {
          "verified": true,
          "metadata": {
            "validation_response": {
              "message": "Success",
              "code": 200
            }
          }
        }
      },
      "type": "object"
    },
    "claim": {
      "description": "A claim for the engine to verify",
      "example": {
        "relationship": "gt_or_eq",
        "concept": "age",
        "value": "21",
        "qualifier": {}
      },
      "properties": {
        "relationship": {
          "type": "string"
        },
        "concept": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "qualifier": {
          "type": "object"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "concepts": {
      "description": "A list of concepts",
      "properties": {
        "values": {
          "items": {
            "description": "A concept about which a claim may be made",
            "example": {
              "id": "age",
              "range": "0-120",
              "description": "Age Claim",
              "longDescription": "An age claim can verify the age of a given packets applicant.",
              "type": "integer"
            },
            "properties": {
              "id": {
                "type": "string",
                "x-template": ":id"
              },
              "range": {
                "type": "string",
                "x-template": ":range"
              },
              "qualifiers": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-template": ":qualifiers"
              },
              "description": {
                "type": "string",
                "x-tmplate": ":description"
              },
              "longDescription": {
                "type": "string",
                "x-tmplate": ":longDescription"
              },
              "type": {
                "type": "string",
                "x-template": ":type"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      },
      "required": [
        "metadata"
      ],
      "type": "object"
    },
    "metadata_simple": {
      "properties": {
        "validation_response": {
          "properties": {
            "message": {
              "type": "string"
            },
            "code": {
              "type": "integer"
            }
          },
          "required": [
            "code",
            "message"
          ],
          "type": "object"
        },
        "validation_information": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cache": {
          "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
          "properties": {
            "date_time": {
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "validation_response"
      ],
      "type": "object"
    },
    "error_response": {
      "properties": {
        "metadata": {
          "properties": {
            "validation_response": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "message"
              ],
              "type": "object"
            },
            "validation_information": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cache": {
              "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
              "properties": {
                "date_time": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "validation_response"
          ],
          "type": "object"
        }
      },
      "required": [
        "metadata"
      ],
      "type": "object"
    }
  },
  "responses": {
    "400": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Invalid Request - unable to interpret request"
    },
    "401": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Authentication required to access data"
    },
    "403": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Access denied to protected data"
    },
    "404": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Object not found"
    },
    "409": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Query parameters conflict or are malformed"
    },
    "500": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Internal Service Error"
    },
    "default": {
      "schema": {
        "properties": {
          "metadata": {
            "properties": {
              "validation_response": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "validation_information": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cache": {
                "description": "If data is from live source, value will be null, otherwise it will be date-time of cache",
                "properties": {
                  "date_time": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "validation_response"
            ],
            "type": "object"
          }
        },
        "required": [
          "metadata"
        ],
        "type": "object"
      },
      "description": "Unexpected error"
    }
  },
  "info": {
    "title": "AdmissionsDPPacketsClaimsBYUI",
    "description": "An API for for testing the claims engine concept.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v1"
  }
}