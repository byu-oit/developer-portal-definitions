{
    "tags": [
        {
            "description": "",
            "name": "area"
        },
        {
            "description": "",
            "name": "building"
        },
        {
            "description": "",
            "name": "apartment"
        },
        {
            "description": "",
            "name": "apttype"
        },
        {
            "description": "",
            "name": "room"
        },
        {
            "description": "",
            "name": "bedspace"
        },
        {
            "description": "",
            "name": "familyapartment"
        },
        {
            "description": "",
            "name": "txtype"
        },
        {
            "description": "",
            "name": "ratetype"
        },
        {
            "description": "",
            "name": "agrprd"
        },
        {
            "description": "",
            "name": "chargeschedule"
        },
        {
            "description": "",
            "name": "charge"
        },
        {
            "description": "",
            "name": "mealplanagreement"
        },
        {
            "description": "",
            "name": "person"
        },
        {
            "description": "",
            "name": "personfinancial"
        },
        {
            "description": "",
            "name": "agreement"
        },
        {
            "description": "",
            "name": "allocation"
        },
        {
            "description": "",
            "name": "tempperson"
        },
        {
            "description": "",
            "name": "messageparameters"
        },
        {
            "description": "",
            "name": "messagetemplate"
        },
        {
            "description": "",
            "name": "templatecategory"
        },
        {
            "description": "",
            "name": "messageinbox"
        },
        {
            "description": "",
            "name": "attachedfiles_test"
        },
        {
            "description": "",
            "name": "message"
        },
        {
            "description": "",
            "name": "messageparametersold"
        },
        {
            "description": "",
            "name": "animallisting"
        },
        {
            "description": "",
            "name": "eligibility"
        },
        {
            "description": "",
            "name": "mealplaninfo"
        },
        {
            "description": "",
            "name": "ferpainformation"
        },
        {
            "description": "",
            "name": "ferpacontact"
        }
    ],
    "basePath": "/rest/syncservice/v1",
    "paths": {
        "/ratetype/{ratetype}": {
            "get": {
                "tags": [
                    "ratetype"
                ],
                "parameters": [
                    {
                        "name": "ratetype",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "RateTypes"
                            },
                            "$ref": "#/definitions/RateType"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ratetype"
                ],
                "parameters": [
                    {
                        "name": "ratetype",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "ratetype"
                ],
                "parameters": [
                    {
                        "name": "ratetype",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/RateType_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/chargeschedule": {
            "post": {
                "tags": [
                    "chargeschedule"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ChargeSchedule"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "chargeschedule"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ChargeSchedule"
                            },
                            "xml": {
                                "name": "ChargeSchedules"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/chargeschedule/{scheduleid}": {
            "get": {
                "tags": [
                    "chargeschedule"
                ],
                "parameters": [
                    {
                        "name": "scheduleid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "ChargeSchedules"
                            },
                            "$ref": "#/definitions/ChargeSchedule"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "chargeschedule"
                ],
                "parameters": [
                    {
                        "name": "scheduleid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "chargeschedule"
                ],
                "parameters": [
                    {
                        "name": "scheduleid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ChargeSchedule"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messageinbox/{inbox}": {
            "get": {
                "tags": [
                    "messageinbox"
                ],
                "parameters": [
                    {
                        "name": "inbox",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "MessageInboxs"
                            },
                            "$ref": "#/definitions/MessageInbox"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "messageinbox"
                ],
                "parameters": [
                    {
                        "name": "inbox",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "messageinbox"
                ],
                "parameters": [
                    {
                        "name": "inbox",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageInbox"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/room/{code}": {
            "get": {
                "tags": [
                    "room"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Rooms"
                            },
                            "$ref": "#/definitions/Room"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "room"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "room"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Room"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mealplaninfo/{chargeschedule}": {
            "delete": {
                "tags": [
                    "mealplaninfo"
                ],
                "parameters": [
                    {
                        "name": "chargeschedule",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "mealplaninfo"
                ],
                "parameters": [
                    {
                        "name": "chargeschedule",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/MealPlanInfoTemp"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/attachedfiles_test/{filename}": {
            "get": {
                "tags": [
                    "attachedfiles_test"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "AttachedFiless"
                            },
                            "$ref": "#/definitions/AttachedFiles"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "attachedfiles_test"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tempperson": {
            "post": {
                "tags": [
                    "tempperson"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TempPerson"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "tempperson"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TempPerson"
                            },
                            "xml": {
                                "name": "TempPersons"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/eligibility": {
            "post": {
                "tags": [
                    "eligibility"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/EligibilityTemp"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/eligibility/{appid}": {
            "delete": {
                "tags": [
                    "eligibility"
                ],
                "parameters": [
                    {
                        "name": "appid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messageparametersold/{messageid}": {
            "get": {
                "tags": [
                    "messageparametersold"
                ],
                "parameters": [
                    {
                        "name": "messageid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "MessageParametersOlds"
                            },
                            "$ref": "#/definitions/MessageParametersOld"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "messageparametersold"
                ],
                "parameters": [
                    {
                        "name": "messageid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "messageparametersold"
                ],
                "parameters": [
                    {
                        "name": "messageid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageParametersOld"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/apttype/{typeid}": {
            "get": {
                "tags": [
                    "apttype"
                ],
                "parameters": [
                    {
                        "name": "typeid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "AptTypes"
                            },
                            "$ref": "#/definitions/RoomType"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "apttype"
                ],
                "parameters": [
                    {
                        "name": "typeid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "apttype"
                ],
                "parameters": [
                    {
                        "name": "typeid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/RoomType"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messageparametersold": {
            "post": {
                "tags": [
                    "messageparametersold"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageParametersOld"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "messageparametersold"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MessageParametersOld"
                            },
                            "xml": {
                                "name": "MessageParametersOlds"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/txtype": {
            "post": {
                "tags": [
                    "txtype"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TxType"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "txtype"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TxType"
                            },
                            "xml": {
                                "name": "TxTypes"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/area": {
            "post": {
                "tags": [
                    "area"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Area"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "area"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Area"
                            },
                            "xml": {
                                "name": "Areas"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/agreement/{agreementid}": {
            "get": {
                "tags": [
                    "agreement"
                ],
                "parameters": [
                    {
                        "name": "agreementid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Agreements"
                            },
                            "$ref": "#/definitions/Agreement"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "agreement"
                ],
                "parameters": [
                    {
                        "name": "agreementid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "agreement"
                ],
                "parameters": [
                    {
                        "name": "agreementid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Agreement_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/allocation": {
            "post": {
                "tags": [
                    "allocation"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Allocation"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ferpainformation/{ferpaid}": {
            "get": {
                "tags": [
                    "ferpainformation"
                ],
                "parameters": [
                    {
                        "name": "ferpaid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "FerpaInformations"
                            },
                            "$ref": "#/definitions/FerpaInformation"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ferpainformation"
                ],
                "parameters": [
                    {
                        "name": "ferpaid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "ferpainformation"
                ],
                "parameters": [
                    {
                        "name": "ferpaid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FerpaInformation"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/agrprd/{agrprd}": {
            "get": {
                "tags": [
                    "agrprd"
                ],
                "parameters": [
                    {
                        "name": "agrprd",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "AgrPrds"
                            },
                            "$ref": "#/definitions/AgrPrd"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "agrprd"
                ],
                "parameters": [
                    {
                        "name": "agrprd",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "agrprd"
                ],
                "parameters": [
                    {
                        "name": "agrprd",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/AgrPrd"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ratetype": {
            "post": {
                "tags": [
                    "ratetype"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RateType_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "ratetype"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RateType"
                            },
                            "xml": {
                                "name": "RateTypes"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ferpacontact": {
            "post": {
                "tags": [
                    "ferpacontact"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TempFerpaContact"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bedspace": {
            "post": {
                "tags": [
                    "bedspace"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Bedspace_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "bedspace"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Bedspace"
                            },
                            "xml": {
                                "name": "Bedspaces"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/message/{messageid}": {
            "get": {
                "tags": [
                    "message"
                ],
                "parameters": [
                    {
                        "name": "messageid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Messages"
                            },
                            "$ref": "#/definitions/Message"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "message"
                ],
                "parameters": [
                    {
                        "name": "messageid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "message"
                ],
                "parameters": [
                    {
                        "name": "messageid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Message_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/apartment/{code}": {
            "get": {
                "tags": [
                    "apartment"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Apartments"
                            },
                            "$ref": "#/definitions/Apartment"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "apartment"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "apartment"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Apartment_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/room": {
            "post": {
                "tags": [
                    "room"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Room"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "room"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Room"
                            },
                            "xml": {
                                "name": "Rooms"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/message": {
            "post": {
                "tags": [
                    "message"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Message_2"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "message"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Message"
                            },
                            "xml": {
                                "name": "Messages"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/allocation/{availid}": {
            "delete": {
                "tags": [
                    "allocation"
                ],
                "parameters": [
                    {
                        "name": "availid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "allocation"
                ],
                "parameters": [
                    {
                        "name": "availid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Allocation"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/charge/{pmtid}": {
            "get": {
                "tags": [
                    "charge"
                ],
                "parameters": [
                    {
                        "name": "pmtid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Charges"
                            },
                            "$ref": "#/definitions/Charge"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "charge"
                ],
                "parameters": [
                    {
                        "name": "pmtid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "charge"
                ],
                "parameters": [
                    {
                        "name": "pmtid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Charge_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messagetemplate": {
            "post": {
                "tags": [
                    "messagetemplate"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageTemplate_2"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "messagetemplate"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MessageTemplate"
                            },
                            "xml": {
                                "name": "MessageTemplates"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messageparameters": {
            "post": {
                "tags": [
                    "messageparameters"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageParameters_2"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "messageparameters"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MessageParameters"
                            },
                            "xml": {
                                "name": "MessageParameterss"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ferpainformation": {
            "post": {
                "tags": [
                    "ferpainformation"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/FerpaInformation"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "ferpainformation"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/FerpaInformation"
                            },
                            "xml": {
                                "name": "FerpaInformations"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mealplanagreement/{agreementid}": {
            "get": {
                "tags": [
                    "mealplanagreement"
                ],
                "parameters": [
                    {
                        "name": "agreementid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "MealPlanAgreements"
                            },
                            "$ref": "#/definitions/MealPlanAgreement"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "mealplanagreement"
                ],
                "parameters": [
                    {
                        "name": "agreementid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "mealplanagreement"
                ],
                "parameters": [
                    {
                        "name": "agreementid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/MealPlanAgreement_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/personfinancial/{netid}": {
            "delete": {
                "tags": [
                    "personfinancial"
                ],
                "parameters": [
                    {
                        "name": "netid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "personfinancial"
                ],
                "parameters": [
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "netid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/PersonFinancial"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/animallisting": {
            "post": {
                "tags": [
                    "animallisting"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AnimalListing_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "animallisting"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AnimalListing"
                            },
                            "xml": {
                                "name": "AnimalListings"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/attachedfiles_test/{fileid}": {
            "patch": {
                "tags": [
                    "attachedfiles_test"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "name": "fileid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/AttachedFiles_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/apartment": {
            "post": {
                "tags": [
                    "apartment"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Apartment_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "apartment"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Apartment"
                            },
                            "xml": {
                                "name": "Apartments"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/txtype/{txtype}": {
            "get": {
                "tags": [
                    "txtype"
                ],
                "parameters": [
                    {
                        "name": "txtype",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "TxTypes"
                            },
                            "$ref": "#/definitions/TxType"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "txtype"
                ],
                "parameters": [
                    {
                        "name": "txtype",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "txtype"
                ],
                "parameters": [
                    {
                        "name": "txtype",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/TxType"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/templatecategory/{name}": {
            "get": {
                "tags": [
                    "templatecategory"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "TemplateCategorys"
                            },
                            "$ref": "#/definitions/TemplateCategory"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "templatecategory"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "templatecategory"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/TemplateCategory"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/agreement": {
            "post": {
                "tags": [
                    "agreement"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Agreement_2"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "agreement"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            },
                            "xml": {
                                "name": "Agreements"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/charge": {
            "post": {
                "tags": [
                    "charge"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Charge_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "charge"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Charge"
                            },
                            "xml": {
                                "name": "Charges"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messagetemplate/{templateid}": {
            "get": {
                "tags": [
                    "messagetemplate"
                ],
                "parameters": [
                    {
                        "name": "templateid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "MessageTemplates"
                            },
                            "$ref": "#/definitions/MessageTemplate"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "messagetemplate"
                ],
                "parameters": [
                    {
                        "name": "templateid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "messagetemplate"
                ],
                "parameters": [
                    {
                        "name": "templateid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageTemplate_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/person/{netid}": {
            "get": {
                "tags": [
                    "person"
                ],
                "parameters": [
                    {
                        "name": "netid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Persons"
                            },
                            "$ref": "#/definitions/Person"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "person"
                ],
                "parameters": [
                    {
                        "name": "netid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/attachedfiles_test": {
            "post": {
                "tags": [
                    "attachedfiles_test"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/AttachedFiles_2"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "attachedfiles_test"
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AttachedFiles"
                            },
                            "xml": {
                                "name": "AttachedFiless"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/familyapartment/{code}": {
            "delete": {
                "tags": [
                    "familyapartment"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "familyapartment"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/FamilyApartment"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messageinbox": {
            "post": {
                "tags": [
                    "messageinbox"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageInbox"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "messageinbox"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MessageInbox"
                            },
                            "xml": {
                                "name": "MessageInboxs"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/area/{areaid}": {
            "get": {
                "tags": [
                    "area"
                ],
                "parameters": [
                    {
                        "name": "areaid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Areas"
                            },
                            "$ref": "#/definitions/Area"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "area"
                ],
                "parameters": [
                    {
                        "name": "areaid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "area"
                ],
                "parameters": [
                    {
                        "name": "areaid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Area"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/apttype": {
            "post": {
                "tags": [
                    "apttype"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RoomType"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "apttype"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RoomType"
                            },
                            "xml": {
                                "name": "AptTypes"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/templatecategory": {
            "post": {
                "tags": [
                    "templatecategory"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TemplateCategory"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "templatecategory"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TemplateCategory"
                            },
                            "xml": {
                                "name": "TemplateCategorys"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/animallisting/{animalid}": {
            "get": {
                "tags": [
                    "animallisting"
                ],
                "parameters": [
                    {
                        "name": "animalid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "AnimalListings"
                            },
                            "$ref": "#/definitions/AnimalListing"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "animallisting"
                ],
                "parameters": [
                    {
                        "name": "animalid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "animallisting"
                ],
                "parameters": [
                    {
                        "name": "animalid",
                        "type": "integer",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/AnimalListing_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/building/{code}": {
            "post": {
                "tags": [
                    "building"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Building_2_3"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "building"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Buildings"
                            },
                            "$ref": "#/definitions/Building"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "building"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/mealplanagreement": {
            "post": {
                "tags": [
                    "mealplanagreement"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/MealPlanAgreement_2"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "mealplanagreement"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MealPlanAgreement"
                            },
                            "xml": {
                                "name": "MealPlanAgreements"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/person": {
            "post": {
                "tags": [
                    "person"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Person_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "person"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Person"
                            },
                            "xml": {
                                "name": "Persons"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "person"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Person_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/building": {
            "post": {
                "tags": [
                    "building"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Building_2"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "building"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Building"
                            },
                            "xml": {
                                "name": "Buildings"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        },
        "/messageparameters/{parameterid}": {
            "get": {
                "tags": [
                    "messageparameters"
                ],
                "parameters": [
                    {
                        "name": "parameterid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "MessageParameterss"
                            },
                            "$ref": "#/definitions/MessageParameters"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "messageparameters"
                ],
                "parameters": [
                    {
                        "name": "parameterid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "messageparameters"
                ],
                "parameters": [
                    {
                        "name": "parameterid",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/MessageParameters_2"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bedspace/{code}": {
            "get": {
                "tags": [
                    "bedspace"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "xml": {
                                "name": "Bedspaces"
                            },
                            "$ref": "#/definitions/Bedspace"
                        },
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "bedspace"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "bedspace"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "in": "path"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Bedspace"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/agrprd": {
            "post": {
                "tags": [
                    "agrprd"
                ],
                "parameters": [
                    {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgrPrd"
                            },
                            "type": "array"
                        },
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "default": "false",
                        "name": "is_testing",
                        "type": "boolean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": [
                    "agrprd"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgrPrd"
                            },
                            "xml": {
                                "name": "AgrPrds"
                            },
                            "type": "array"
                        },
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "host": "api.byu.edu:443",
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "definitions": {
        "TemplateCategory": {
            "title": "TemplateCategory",
            "xml": {
                "name": "TemplateCategory"
            },
            "properties": {
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TempPerson": {
            "title": "TempPerson",
            "xml": {
                "name": "TempPerson"
            },
            "properties": {
                "CellNumber": {
                    "type": "string"
                },
                "ByuId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SecondaryRole": {
                    "type": "string"
                },
                "PrimaryRole": {
                    "enum": [
                        "Faculty",
                        "Employee",
                        "Affiliate",
                        "Student",
                        "_Empty",
                        "Do_Not_Issue"
                    ],
                    "type": "string"
                },
                "LowerSortName": {
                    "type": "string"
                },
                "NetId": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "IsAdmin": {
                    "type": "boolean"
                },
                "DisplayName": {
                    "type": "string"
                },
                "IsStudent": {
                    "type": "boolean"
                },
                "PreferredFirstName": {
                    "type": "string"
                },
                "PersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Email": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "MassMessageAllowed": {
                    "type": "boolean"
                },
                "Birthdate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MaritalStatus": {
                    "enum": [
                        "M",
                        "W",
                        "U",
                        "S",
                        "D"
                    ],
                    "type": "string"
                },
                "SpouseNetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AnimalListing": {
            "title": "AnimalListing",
            "xml": {
                "name": "AnimalListing"
            },
            "properties": {
                "Notes": {
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AnimalType": {
                    "enum": [
                        "Dog",
                        "Cat",
                        "Rodent",
                        "Bird",
                        "Snake",
                        "Fish",
                        "Rabbit"
                    ],
                    "type": "string"
                },
                "Purpose": {
                    "enum": [
                        "Service",
                        "Unauthorized",
                        "Emotional_Support"
                    ],
                    "type": "string"
                },
                "AnimalId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Building": {
            "title": "Building",
            "xml": {
                "name": "Building"
            },
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                },
                "OfficePhone": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Coordinates": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Area": {
            "title": "Area",
            "xml": {
                "name": "Area"
            },
            "properties": {
                "AreaId": {
                    "type": "string"
                },
                "AreaName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RateType_2": {
            "title": "RateType",
            "xml": {
                "name": "RateType"
            },
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "UnbillableClassification": {
                    "type": "string"
                },
                "Category": {
                    "enum": [
                        "SL",
                        "FR",
                        "RM",
                        "MP",
                        "AS"
                    ],
                    "type": "string"
                },
                "Descriptor": {
                    "type": "string"
                },
                "TxType": {
                    "title": "",
                    "properties": {
                        "TxType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "RateType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Message_2": {
            "title": "Message",
            "xml": {
                "name": "Message"
            },
            "properties": {
                "LinkedObjectId": {
                    "type": "string"
                },
                "TempPerson": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "ThreadId": {
                    "format": "int64",
                    "type": "integer"
                },
                "SendTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "Archived": {
                    "type": "boolean"
                },
                "EmailSentDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "OpenTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "SentAsText": {
                    "type": "boolean"
                },
                "MessageId": {
                    "format": "int64",
                    "type": "integer"
                },
                "Person_2": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Person_3": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "MessageTemplate": {
                    "title": "",
                    "properties": {
                        "TemplateId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "CompleteDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "IsOriginalMessage": {
                    "type": "boolean"
                },
                "AdminOnly": {
                    "type": "boolean"
                },
                "Subject": {
                    "type": "string"
                },
                "StudentRead": {
                    "enum": [
                        "Read",
                        "Unread"
                    ],
                    "type": "string"
                },
                "Message": {
                    "title": "",
                    "properties": {
                        "MessageId": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "Bookmarked": {
                    "type": "boolean"
                },
                "SensitiveInformation": {
                    "type": "boolean"
                },
                "AdminRead": {
                    "enum": [
                        "Read",
                        "Unread"
                    ],
                    "type": "string"
                },
                "EmailTemplate": {
                    "title": "",
                    "properties": {
                        "TemplateName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Text": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Processing": {
                    "type": "boolean"
                },
                "MessageInbox": {
                    "title": "",
                    "properties": {
                        "Inbox": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "SentAsEmail": {
                    "type": "boolean"
                },
                "LinkedObjectCategory": {
                    "type": "string"
                },
                "MessageType": {
                    "enum": [
                        "StudentMessage",
                        "AdminMessage",
                        "EmailMessage",
                        "TextMessage",
                        "Template",
                        "Notification",
                        "AdminNote"
                    ],
                    "type": "string"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Building_2_3": {
            "title": "Building",
            "xml": {
                "name": "Building"
            },
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                },
                "OfficePhone": {
                    "type": "string"
                },
                "Area": {
                    "title": "",
                    "properties": {
                        "AreaId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Code": {
                    "type": "string"
                },
                "Coordinates": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageParameters": {
            "title": "MessageParameters",
            "xml": {
                "name": "MessageParameters"
            },
            "properties": {
                "Value": {
                    "type": "string"
                },
                "Position": {
                    "format": "int32",
                    "type": "integer"
                },
                "ParameterId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Allocation": {
            "title": "Allocation",
            "xml": {
                "name": "Allocation"
            },
            "properties": {
                "Apartment": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "HoldType": {
                    "enum": [
                        "swap",
                        "_new",
                        "housing",
                        "_false",
                        "none",
                        "filled",
                        "open"
                    ],
                    "type": "string"
                },
                "HsgType": {
                    "enum": [
                        "Male",
                        "Female",
                        "Family"
                    ],
                    "type": "string"
                },
                "AvailId": {
                    "type": "string"
                },
                "AgrPrd": {
                    "title": "",
                    "properties": {
                        "AgrPrd": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Notes": {
                    "type": "string"
                },
                "AvailabilityDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Person_2": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Bedspace": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "HoldDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "MealPlanAgreement": {
            "title": "MealPlanAgreement",
            "xml": {
                "name": "MealPlanAgreement"
            },
            "properties": {
                "ControlTotal": {
                    "type": "number"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BuySentAtrium": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AgreementId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PromoCode": {
                    "type": "string"
                },
                "SellSentToAtrium": {
                    "format": "date-time",
                    "type": "string"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Room": {
            "title": "Room",
            "xml": {
                "name": "Room"
            },
            "properties": {
                "Apartment": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Room": {
                    "format": "int32",
                    "type": "integer"
                },
                "MailKey": {
                    "type": "string"
                },
                "RoomKey": {
                    "type": "string"
                },
                "RoomName": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TempFerpaContact": {
            "title": "TempFerpaContact",
            "xml": {
                "name": "TempFerpaContact"
            },
            "properties": {
                "Access1": {
                    "type": "string"
                },
                "Person2": {
                    "type": "string"
                },
                "Person1": {
                    "type": "string"
                },
                "Access2": {
                    "type": "string"
                },
                "FerpaInformation": {
                    "title": "",
                    "properties": {
                        "FerpaId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "RoomType": {
            "title": "AptType",
            "xml": {
                "name": "AptType"
            },
            "properties": {
                "NumRooms": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsLinked": {
                    "type": "boolean"
                },
                "CIRosterName": {
                    "type": "string"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "AptType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageParametersOld": {
            "title": "MessageParametersOld",
            "xml": {
                "name": "MessageParametersOld"
            },
            "properties": {
                "Field3": {
                    "type": "string"
                },
                "Field2": {
                    "type": "string"
                },
                "Field5": {
                    "type": "string"
                },
                "Field4": {
                    "type": "string"
                },
                "Field7": {
                    "type": "string"
                },
                "MessageId": {
                    "format": "int64",
                    "type": "integer"
                },
                "Field6": {
                    "type": "string"
                },
                "Field9": {
                    "type": "string"
                },
                "Field8": {
                    "type": "string"
                },
                "Field10": {
                    "type": "string"
                },
                "Field1": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Charge_2": {
            "title": "Charge",
            "xml": {
                "name": "Charge"
            },
            "properties": {
                "PsTermId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Amount": {
                    "type": "number"
                },
                "DailyRate": {
                    "type": "number"
                },
                "BillEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "PastDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ChargeSchedule": {
                    "title": "",
                    "properties": {
                        "ScheduleId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "BillStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "AssessDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "PmtId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Ref1Desc": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ChargeSchedule": {
            "title": "ChargeSchedule",
            "xml": {
                "name": "ChargeSchedule"
            },
            "properties": {
                "Publish": {
                    "type": "boolean"
                },
                "Descriptor": {
                    "type": "string"
                },
                "ScheduleId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SendDaysBeforeDueDate": {
                    "format": "int32",
                    "type": "integer"
                },
                "Dflt": {
                    "type": "string"
                },
                "RateType": {
                    "title": "",
                    "properties": {
                        "RateType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "ScheduleType": {
                    "enum": [
                        "Periodic",
                        "All"
                    ],
                    "type": "string"
                },
                "AgrPrd": {
                    "title": "",
                    "properties": {
                        "AgrPrd": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Person_2": {
            "title": "Person",
            "xml": {
                "name": "Person"
            },
            "properties": {
                "CellNumber": {
                    "type": "string"
                },
                "ByuId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SecondaryRole": {
                    "type": "string"
                },
                "PrimaryRole": {
                    "enum": [
                        "Faculty",
                        "Employee",
                        "Affiliate",
                        "Student",
                        "_Empty",
                        "Do_Not_Issue"
                    ],
                    "type": "string"
                },
                "LowerSortName": {
                    "type": "string"
                },
                "NetId": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "IsAdmin": {
                    "type": "boolean"
                },
                "IsStudent": {
                    "type": "boolean"
                },
                "PreferredFirstName": {
                    "type": "string"
                },
                "PersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Email": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "MassMessageAllowed": {
                    "type": "boolean"
                },
                "Birthdate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MaritalStatus": {
                    "enum": [
                        "M",
                        "W",
                        "U",
                        "S",
                        "D"
                    ],
                    "type": "string"
                },
                "SpouseNetId": {
                    "type": "string"
                },
                "AnticipatedMarrDate": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Building_2": {
            "title": "Building",
            "xml": {
                "name": "Building"
            },
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                },
                "OfficePhone": {
                    "type": "string"
                },
                "Area": {
                    "title": "",
                    "properties": {
                        "AreaId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Bldg": {
                    "type": "string"
                },
                "Code": {
                    "type": "string"
                },
                "Coordinates": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Bedspace_2": {
            "title": "Bedspace",
            "xml": {
                "name": "Bedspace"
            },
            "properties": {
                "RoomCoordinates": {
                    "type": "string"
                },
                "Room": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "RateType": {
                    "title": "",
                    "properties": {
                        "RateType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Locked": {
                    "type": "boolean"
                },
                "Code": {
                    "type": "string"
                },
                "Bed": {
                    "enum": [
                        "A",
                        "B",
                        "C",
                        "D",
                        "E"
                    ],
                    "type": "string"
                },
                "Coordinates": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RateType": {
            "title": "RateType",
            "xml": {
                "name": "RateType"
            },
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "UnbillableClassification": {
                    "type": "string"
                },
                "Category": {
                    "enum": [
                        "SL",
                        "FR",
                        "RM",
                        "MP",
                        "AS"
                    ],
                    "type": "string"
                },
                "Descriptor": {
                    "type": "string"
                },
                "RateType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Bedspace": {
            "title": "Bedspace",
            "xml": {
                "name": "Bedspace"
            },
            "properties": {
                "RoomCoordinates": {
                    "type": "string"
                },
                "Room": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Locked": {
                    "type": "boolean"
                },
                "Code": {
                    "type": "string"
                },
                "Bed": {
                    "enum": [
                        "A",
                        "B",
                        "C",
                        "D",
                        "E"
                    ],
                    "type": "string"
                },
                "Coordinates": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageTemplate": {
            "title": "MessageTemplate",
            "xml": {
                "name": "MessageTemplate"
            },
            "properties": {
                "NewTemplateStyle": {
                    "type": "boolean"
                },
                "TemplateName": {
                    "type": "string"
                },
                "Subject": {
                    "type": "string"
                },
                "IsHidden": {
                    "type": "boolean"
                },
                "DateUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "PlainBody": {
                    "type": "string"
                },
                "TemplateVersionNumber": {
                    "format": "int64",
                    "type": "integer"
                },
                "TemplateId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Agreement_2": {
            "title": "Agreement",
            "xml": {
                "name": "Agreement"
            },
            "properties": {
                "CheckInFormDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CheckInDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AgreementId": {
                    "format": "int32",
                    "type": "integer"
                },
                "CheckOutDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SwapPrefCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "InspectionDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BilledUpToDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SentToCCureDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "UnbilledContracted": {
                    "type": "boolean"
                },
                "Allocation": {
                    "title": "",
                    "properties": {
                        "AllocationId": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "WelcomeSheetDate": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PersonFinancial": {
            "title": "PersonFinancial",
            "xml": {
                "name": "PersonFinancial"
            },
            "properties": {
                "HousingReleaseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DepositRequired": {
                    "type": "boolean"
                },
                "ReleaseHousing": {
                    "type": "boolean"
                },
                "DphBalance": {
                    "type": "number"
                },
                "DateBalancesUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "DepositCharged": {
                    "type": "boolean"
                },
                "ReleaseDining": {
                    "type": "boolean"
                },
                "FamProcFeeCharged": {
                    "type": "boolean"
                },
                "LaundryAtriumSent": {
                    "format": "date-time",
                    "type": "string"
                },
                "SngProcFeeCharged": {
                    "type": "boolean"
                },
                "DiningReleaseDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DinBalance": {
                    "type": "number"
                },
                "AccBalance": {
                    "type": "number"
                },
                "FamProcFeeRequired": {
                    "type": "boolean"
                },
                "SngProcFeeExempt": {
                    "type": "boolean"
                },
                "LaundryDiscount": {
                    "type": "boolean"
                },
                "DepositExempt": {
                    "type": "boolean"
                },
                "DelinquentAfter": {
                    "format": "date-time",
                    "type": "string"
                },
                "SngProcFeeRequired": {
                    "type": "boolean"
                },
                "FamProcFeeExempt": {
                    "type": "boolean"
                },
                "Balance": {
                    "type": "number"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Apartment": {
            "title": "Apartment",
            "xml": {
                "name": "Apartment"
            },
            "properties": {
                "Apt": {
                    "format": "int32",
                    "type": "integer"
                },
                "Address": {
                    "type": "string"
                },
                "Ada": {
                    "type": "boolean"
                },
                "Wing": {
                    "format": "int32",
                    "type": "integer"
                },
                "Code": {
                    "type": "string"
                },
                "Floor": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Apartment_2": {
            "title": "Apartment",
            "xml": {
                "name": "Apartment"
            },
            "properties": {
                "Apt": {
                    "format": "int32",
                    "type": "integer"
                },
                "Building": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Address": {
                    "type": "string"
                },
                "Ada": {
                    "type": "boolean"
                },
                "Wing": {
                    "format": "int32",
                    "type": "integer"
                },
                "Code": {
                    "type": "string"
                },
                "AptType": {
                    "title": "",
                    "properties": {
                        "TypeId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "Floor": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MessageParameters_2": {
            "title": "MessageParameters",
            "xml": {
                "name": "MessageParameters"
            },
            "properties": {
                "Value": {
                    "type": "string"
                },
                "Message": {
                    "title": "",
                    "properties": {
                        "MessageId": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "Position": {
                    "format": "int32",
                    "type": "integer"
                },
                "ParameterId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Message": {
            "title": "Message",
            "xml": {
                "name": "Message"
            },
            "properties": {
                "LinkedObjectId": {
                    "type": "string"
                },
                "AdminOnly": {
                    "type": "boolean"
                },
                "StudentRead": {
                    "enum": [
                        "Read",
                        "Unread"
                    ],
                    "type": "string"
                },
                "Subject": {
                    "type": "string"
                },
                "ThreadId": {
                    "format": "int64",
                    "type": "integer"
                },
                "Bookmarked": {
                    "type": "boolean"
                },
                "SendTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "EmailSentDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Archived": {
                    "type": "boolean"
                },
                "SensitiveInformation": {
                    "type": "boolean"
                },
                "AdminRead": {
                    "enum": [
                        "Read",
                        "Unread"
                    ],
                    "type": "string"
                },
                "OpenTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Processing": {
                    "type": "boolean"
                },
                "Email": {
                    "type": "string"
                },
                "MessageId": {
                    "format": "int64",
                    "type": "integer"
                },
                "SentAsText": {
                    "type": "boolean"
                },
                "SentAsEmail": {
                    "type": "boolean"
                },
                "LinkedObjectCategory": {
                    "type": "string"
                },
                "CompleteDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MessageType": {
                    "enum": [
                        "StudentMessage",
                        "AdminMessage",
                        "EmailMessage",
                        "TextMessage",
                        "Template",
                        "Notification",
                        "AdminNote"
                    ],
                    "type": "string"
                },
                "IsOriginalMessage": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Charge": {
            "title": "Charge",
            "xml": {
                "name": "Charge"
            },
            "properties": {
                "PsTermId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Amount": {
                    "type": "number"
                },
                "DailyRate": {
                    "type": "number"
                },
                "BillEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "PastDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BillStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "AssessDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "PmtId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Ref1Desc": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TxType": {
            "title": "TxType",
            "xml": {
                "name": "TxType"
            },
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "Description": {
                    "type": "string"
                },
                "TxType": {
                    "type": "string"
                },
                "DefaultRef1Desc": {
                    "type": "string"
                },
                "RmsTxType": {
                    "type": "string"
                },
                "SfAccount": {
                    "type": "string"
                },
                "PsItemType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MealPlanAgreement_2": {
            "title": "MealPlanAgreement",
            "xml": {
                "name": "MealPlanAgreement"
            },
            "properties": {
                "ControlTotal": {
                    "type": "number"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BuySentAtrium": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AgreementId": {
                    "format": "int32",
                    "type": "integer"
                },
                "PromoCode": {
                    "type": "string"
                },
                "SellSentToAtrium": {
                    "format": "date-time",
                    "type": "string"
                },
                "RateType": {
                    "title": "",
                    "properties": {
                        "RateType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AttachedFiles": {
            "title": "AttachedFiles",
            "xml": {
                "name": "AttachedFiles"
            },
            "properties": {
                "FileDisplay": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AgrPrd": {
            "title": "AgrPrd",
            "xml": {
                "name": "AgrPrd"
            },
            "properties": {
                "OpenRsForEveryone": {
                    "format": "date-time",
                    "type": "string"
                },
                "Semester": {
                    "type": "string"
                },
                "AgrPrdDescr": {
                    "type": "string"
                },
                "UnbillableEnd": {
                    "type": "string"
                },
                "AcceptFlsrAppsEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "CesTermId": {
                    "type": "string"
                },
                "AppDisplayRsDates": {
                    "type": "boolean"
                },
                "AcceptFlsrAppsStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "MpAvailableStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "RoommateChangeUntil": {
                    "format": "date-time",
                    "type": "string"
                },
                "CheckInTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "ActiveRs": {
                    "type": "boolean"
                },
                "EarlyArrivalFee": {
                    "type": "number"
                },
                "AgrPrd": {
                    "type": "string"
                },
                "CustomCheckIn": {
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AcceptAppsEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "CommunityRestrictionsEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "RsCloseBehindMove": {
                    "type": "boolean"
                },
                "EarlyArrivalStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "FirstRsDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AcceptAppsStart": {
                    "format": "date-time",
                    "type": "string"
                },
                "UnbillableStart": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MealPlanInfoTemp": {
            "title": "MealPlanInfoTemp",
            "xml": {
                "name": "MealPlanInfoTemp"
            },
            "properties": {
                "MealPlanDescr1": {
                    "type": "string"
                },
                "MealPlanDescr2": {
                    "type": "string"
                },
                "AllowWt": {
                    "type": "boolean"
                },
                "AllowHl": {
                    "type": "boolean"
                },
                "ChargeSchedule": {
                    "title": "",
                    "properties": {
                        "ScheduleId": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "AllowWp": {
                    "type": "boolean"
                },
                "AllowOffCampus": {
                    "type": "boolean"
                },
                "AllowHr": {
                    "type": "boolean"
                },
                "AllowFl": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MessageTemplate_2": {
            "title": "MessageTemplate",
            "xml": {
                "name": "MessageTemplate"
            },
            "properties": {
                "NewTemplateStyle": {
                    "type": "boolean"
                },
                "TemplateName": {
                    "type": "string"
                },
                "TemplateCategory": {
                    "title": "",
                    "properties": {
                        "Name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Subject": {
                    "type": "string"
                },
                "IsHidden": {
                    "type": "boolean"
                },
                "DateUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "CreationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "MessageTemplate": {
                    "title": "",
                    "properties": {
                        "TemplateId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "PlainBody": {
                    "type": "string"
                },
                "TemplateVersionNumber": {
                    "format": "int64",
                    "type": "integer"
                },
                "TemplateId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MessageInbox": {
            "title": "MessageInbox",
            "xml": {
                "name": "MessageInbox"
            },
            "properties": {
                "InboxDescription": {
                    "type": "string"
                },
                "InboxCode": {
                    "type": "string"
                },
                "Inbox": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AnimalListing_2": {
            "title": "AnimalListing",
            "xml": {
                "name": "AnimalListing"
            },
            "properties": {
                "Notes": {
                    "type": "string"
                },
                "Apartment": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "EndDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AnimalType": {
                    "enum": [
                        "Dog",
                        "Cat",
                        "Rodent",
                        "Bird",
                        "Snake",
                        "Fish",
                        "Rabbit"
                    ],
                    "type": "string"
                },
                "Purpose": {
                    "enum": [
                        "Service",
                        "Unauthorized",
                        "Emotional_Support"
                    ],
                    "type": "string"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "AnimalId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AttachedFiles_2": {
            "title": "AttachedFiles",
            "xml": {
                "name": "AttachedFiles"
            },
            "properties": {
                "Messages": {
                    "items": {
                        "title": "Message",
                        "xml": {
                            "name": "Message"
                        },
                        "properties": {
                            "MessageId": {
                                "format": "int64",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "FileDisplay": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                },
                "MessageTemplate": {
                    "title": "",
                    "properties": {
                        "TemplateId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "FileId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Agreement": {
            "title": "Agreement",
            "xml": {
                "name": "Agreement"
            },
            "properties": {
                "CheckInFormDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CheckInDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AgreementId": {
                    "format": "int32",
                    "type": "integer"
                },
                "CheckOutDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SwapPrefCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "InspectionDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BilledUpToDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SentToCCureDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "UnbilledContracted": {
                    "type": "boolean"
                },
                "WelcomeSheetDate": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FerpaInformation": {
            "title": "FerpaInformation",
            "xml": {
                "name": "FerpaInformation"
            },
            "properties": {
                "StakeRelease": {
                    "type": "boolean"
                },
                "Answer": {
                    "type": "string"
                },
                "Question": {
                    "enum": [
                        "Bones",
                        "Father",
                        "Hero",
                        "Cousin",
                        "Teacher",
                        "Pet"
                    ],
                    "type": "string"
                },
                "CreationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "FerpaId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Identifier": {
                    "type": "string"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "EligibilityTemp": {
            "title": "EligibilityTemp",
            "xml": {
                "name": "EligibilityTemp"
            },
            "properties": {
                "PriorityDateWyview": {
                    "format": "date-time",
                    "type": "string"
                },
                "CancelNote": {
                    "type": "string"
                },
                "AdmitOverride": {
                    "type": "boolean"
                },
                "AppId": {
                    "format": "int32",
                    "type": "integer"
                },
                "CreationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "AgrPrd": {
                    "title": "",
                    "properties": {
                        "AgrPrd": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "CancelDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "PriorityDateHelaman": {
                    "format": "date-time",
                    "type": "string"
                },
                "PriorityDateHeritage": {
                    "format": "date-time",
                    "type": "string"
                },
                "PriorityRank": {
                    "format": "int32",
                    "type": "integer"
                },
                "Person_2": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "CancelReason": {
                    "enum": [
                        "Withdrawn",
                        "Never_Submitted",
                        "PAR",
                        "Batch_Cancel",
                        "Financial",
                        "Denied",
                        "Agreement_Period_Over",
                        "Eligibility_Period_Over",
                        "Other"
                    ],
                    "type": "string"
                },
                "EarlyArrivalDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Flags": {
                    "type": "string"
                },
                "Person": {
                    "title": "",
                    "properties": {
                        "NetId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Person": {
            "title": "Person",
            "xml": {
                "name": "Person"
            },
            "properties": {
                "CellNumber": {
                    "type": "string"
                },
                "ByuId": {
                    "format": "int32",
                    "type": "integer"
                },
                "LowerSortName": {
                    "type": "string"
                },
                "NetId": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "IsAdmin": {
                    "type": "boolean"
                },
                "DisplayName": {
                    "type": "string"
                },
                "IsStudent": {
                    "type": "boolean"
                },
                "PreferredFirstName": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "PersonId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Gender": {
                    "type": "string"
                },
                "MassMessageAllowed": {
                    "type": "boolean"
                },
                "Birthdate": {
                    "format": "date-time",
                    "type": "string"
                },
                "SpouseNetId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FamilyApartment": {
            "title": "FamilyApartment",
            "xml": {
                "name": "FamilyApartment"
            },
            "properties": {
                "Bedrooms": {
                    "enum": [
                        "_1",
                        "S",
                        "_2",
                        "_3"
                    ],
                    "type": "string"
                },
                "Apartment": {
                    "title": "",
                    "properties": {
                        "Code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "ElectricityAcct": {
                    "type": "string"
                },
                "WifiArray": {
                    "type": "boolean"
                },
                "RateType": {
                    "title": "",
                    "properties": {
                        "RateType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "title": "SyncService",
        "version": "1.0.0"
    }
}